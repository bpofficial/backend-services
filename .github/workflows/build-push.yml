name: Build and Push Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Get yarn cache directory path
      run: echo "YARN_CACHE_DIR=$(yarn cache dir)" >> $GITHUB_ENV

    - name: Cache yarn dependencies
      uses: actions/cache@v2
      with:
        path: ${{ env.YARN_CACHE_DIR }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      run: yarn install

    - name: Determine Changed Projects
      run: |
        if git rev-parse HEAD~1 >/dev/null 2>&1; then
            CHANGED_APPS=$(git diff --name-only HEAD~1 HEAD | grep '^apps/' | awk -F/ '{print $2}' | uniq | paste -sd ',' -)
        else
            CHANGED_APPS=$(git ls-tree -r --name-only HEAD | grep '^apps/' | awk -F/ '{print $2}' | uniq | paste -sd ',' -)
        fi
        echo "CHANGED_APPS=$CHANGED_APPS" >> $GITHUB_ENV

    - name: Log in to Container Registry
      run: echo ${{ secrets.REGISTRY_SECRET }} | docker login -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin ${{ secrets.REGISTRY_URL }}

    - name: Build and Push Images
      run: |
        IFS=',' read -r -a apps_array <<< "$CHANGED_APPS"
        echo "Building images for $CHANGED_APPS"
        for project in "${apps_array[@]}"; do
          echo "Building image for $project"
          VERSION=$(date +%s)
          DOCKER_IMAGE="${{ secrets.REGISTRY_URL }}/service-$project:$VERSION"
          docker build -t $DOCKER_IMAGE ./apps/$project
          docker push $DOCKER_IMAGE
        done
